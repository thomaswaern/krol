@mixin flexbox() {
  display:flex;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex:  $values;
  -webkit-flex:  $values;
  -ms-flex:  $values;
  flex:  $values;
}

@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

@mixin flex-wrap($val){
  -webkit-flex-wrap: $val;
  flex-wrap: $val;
  -moz-box-lines: $val;
  -ms-flex-wrap: $val;
}

@mixin justify-content($val){
  justify-content:$val;
  -ms-flex-pack: $val;
  -webkit-justify-content: $val;
}

@mixin flex-direction($val){

  @if $val == 'column' {

    -webkit-box-orient: vertical;
    -moz-box-orient: vertical;
    -webkit-box-direction: normal;
    -moz-box-direction: normal;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }

  @if $val == 'row' {

    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
    -webkit-box-direction: reverse;
    -moz-box-direction: reverse;
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }

}

@mixin align-items($val){
  webkit-box-align: $val;
  -moz-box-align: $val;
  -ms-flex-align: $val;
  -webkit-align-items: $val;
  align-items: $val;
}
